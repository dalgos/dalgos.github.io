{"version":3,"sources":["webpack:///./src/components/Pagination/index.tsx","webpack:///./src/components/PostItem/index.tsx","webpack:///./src/templates/blog-list.tsx"],"names":["Item","styled","div","Pagination","pages","className","map","idx","href","isActive","title","key","classnames","active","to","path","date","excerpt","BlogList","props","posts","data","allMarkdownRemark","edges","pageContext","currentPage","numPages","isFirst","Array","from","length","_","Layout","node","PostItem","fields","slug","frontmatter","blogListQuery"],"mappings":"wUAaA,IAAMA,E,UAAOC,EAAOC,IAAV,KA6BKC,EAvBqB,SAAC,GAE/B,IADJC,EACI,EADJA,MAEA,OACE,uBAAKC,UAAU,kBACb,uBAAKA,UAAU,uBACdD,EAAME,KAAI,WAA4BC,GAA5B,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,SAAUC,EAAnB,EAAmBA,MAAnB,OACP,gBAACV,EAAD,CACEW,IAAG,mBAAqBJ,EACxBF,UAAWO,IAAW,CAAEC,OAAQJ,KAEhC,gBAAC,OAAD,CACEJ,UAAU,iCACVS,GAAIN,EACJE,MAAOA,GACPA,U,qBC7BC,kBAAGK,EAAH,EAAGA,KAAML,EAAT,EAASA,MAAT,EAAgBM,KAAhB,EAAsBC,QAAtB,OACb,+BACE,0BACE,gBAAC,IAAD,CACEH,GAAIC,EACJV,UAAU,gBAETK,M,8CCkDMQ,UA/CmB,SAACC,GACjC,IAAMC,EAAQD,EAAME,KAAKC,kBAAkBC,MADA,EAETJ,EAAMK,YAAhCC,EAFmC,EAEnCA,YAAaC,EAFsB,EAEtBA,SACfC,EAA0B,IAAhBF,EAEVrB,EAAQwB,MAAMC,KAAK,CAAEC,OAAQJ,IAAYpB,KAI5C,SAACyB,EAAGxB,GACL,MAAO,CACLC,KAAiB,IAARD,EAAY,IAAM,UAAYA,EAAM,GAC7CG,MAAO,IAAGH,EAAM,GAChBE,SAAUF,EAAM,IAAMkB,MAG1B,OACE,gBAACO,EAAA,EAAD,KACE,uBAAK3B,UAAU,sBACb,2BAASA,UAAU,SACjB,sBAAIA,UAAU,eACRsB,EAAU,UAAY,IAD5B,YAGCP,EAAMd,KAAI,YAAc,IAAX2B,EAAW,EAAXA,KACV,OACE,gBAACC,EAAD,CACEvB,IAAKsB,EAAKE,OAAOC,KACjBrB,KAAMkB,EAAKI,YAAYtB,KACvBL,MAAOuB,EAAKI,YAAY3B,MACxBM,KAAMiB,EAAKI,YAAYrB,KACvBC,QAASgB,EAAKhB,eAY1B,gBAAC,EAAD,CAAYb,MAAOA,MA1CzB,IAiDakC,EAAgB","file":"component---src-templates-blog-list-tsx-b18d7472980415e8b539.js","sourcesContent":["import * as React from 'react'\nimport { Link } from 'gatsby'\nimport classnames from 'classnames'\nimport styled from 'styled-components'\n\nexport interface Props {\n  pages: Array<{\n    href: string;\n    isActive: boolean;\n    title: string;\n  }>;\n}\n\nconst Item = styled.div`\n  &.active {\n    color: #590098;\n  }\n`\n\nconst Pagination: React.FC<Props> = ({\n  pages,\n}) => {\n  return (\n    <nav className=\"ph3 ph5-ns pv4\">\n      <div className=\"flex justify-center\">\n      {pages.map(({ href, isActive, title }, idx) => (\n          <Item\n            key={`pagination-item-${idx}`}\n            className={classnames({ active: isActive })}\n          >\n            <Link\n              className=\"link dim gray f5 f4-ns dib mr3\"\n              to={href}\n              title={title}\n            >{title}</Link>\n          </Item>\n        ))}\n      </div>\n    </nav>\n  )\n}\n\nexport default Pagination\n","import * as React from 'react'\nimport Link from 'gatsby-link'\nimport Styled from 'styled-components'\nimport Img from 'gatsby-image'\n\nexport default ({ path, title, date, excerpt }) => (\n  <article>\n    <h2>\n      <Link\n        to={path}\n        className=\"f4 fw4 black\"\n      >\n        {title}\n      </Link>\n    </h2>\n    {/* <p className=\"lh-copy\" dangerouslySetInnerHTML={{ __html: excerpt }}>\n      \n    </p>\n    <div className=\"dib off-orange\">\n      <Link to={path} className=\"no-underline b off-orange\">more</Link>\n    </div>\n    <div className=\"mt2 gray\">{date}</div> */}\n  </article>\n)","import * as React from 'react'\nimport { graphql, Link } from 'gatsby'\n\nimport Layout from '../components/Layout'\nimport Pagination from '../components/Pagination'\nimport PostItem from '../components/PostItem'\n\ninterface Props {\n  data: any;\n  pageContext: {\n    numPages: number;\n    currentPage: number;\n  };\n}\n\nconst BlogList: React.FC<Props> = (props) => {\n  const posts = props.data.allMarkdownRemark.edges\n  const { currentPage, numPages } = props.pageContext\n  const isFirst = currentPage === 1\n  const isLast = currentPage === numPages\n  const pages = Array.from({ length: numPages }).map<{\n    href: string;\n    isActive: boolean;\n    title: string;\n  }>((_, idx) => {\n    return {\n      href: `${idx === 0 ? '/' : '/blog/' + (idx + 1)}`,\n      title: `${idx + 1}`,\n      isActive: idx + 1 === currentPage,\n    }\n  })\n  return (\n    <Layout>\n      <div className=\"mw7 pv5 ph3 center\">\n        <section className=\"posts\">\n          <h3 className=\"f4 lh-copy\">\n            {`${isFirst ? 'Latest ' : ''}Articles`}\n          </h3>\n          {posts.map(({ node }) => {\n              return (\n                <PostItem\n                  key={node.fields.slug}\n                  path={node.frontmatter.path}\n                  title={node.frontmatter.title}\n                  date={node.frontmatter.date}\n                  excerpt={node.excerpt}\n                />\n              )\n            })\n          }\n        </section>\n      </div>\n      {/* {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n        return <div key={node.fields.slug}>{title}</div>\n      })} */}\n      \n      <Pagination pages={pages}/>\n    </Layout>\n  )\n}\n\nexport default BlogList\n\nexport const blogListQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          excerpt(pruneLength: 250)\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n          }\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}