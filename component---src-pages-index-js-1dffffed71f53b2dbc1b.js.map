{"version":3,"sources":["webpack:///./src/components/PostItem/index.tsx","webpack:///./src/components/ProfileHero/index.tsx","webpack:///./src/pages/index.js","webpack:///./src/components/Nav/index.tsx","webpack:///./src/components/Footer/index.tsx","webpack:///./src/components/Layout.tsx"],"names":["Styled","article","_templateObject","PostItem","_ref","path","title","date","excerpt","react","className","gatsby_link_default","a","to","dangerouslySetInnerHTML","__html","ProfileHero","style","maxWidth","Index","_data$allMarkdownRema","data","allMarkdownRemark","edges","map","_ref2","node","filter","frontmatter","length","headline","restPosts","slice","react_default","createElement","Layout","components_ProfileHero","post","idx","key","pageQuery","Nav","gatsby_browser_entry","query","render","classnames","zIndex","site","siteMetadata","_3789417007","Footer","href","width","height","fill","xmlns","viewBox","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","d","__webpack_exports__","children","Helmet_default","meta","components_Nav","components_Footer","_3470870683"],"mappings":"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","file":"component---src-pages-index-js-1dffffed71f53b2dbc1b.js","sourcesContent":["import * as React from 'react'\nimport Link from 'gatsby-link'\nimport Styled from 'styled-components'\nimport Img from 'gatsby-image'\n\nconst Article = Styled.article`\n  a {\n    color: initial;\n    &:hover {\n      text-decoration: none;\n    }\n  }\n`\n\nexport default ({ path, title, date, excerpt }) =>\n  <article className=\"pa3\">\n    <Link\n      to={path}\n      className=\"no-underline black\"\n    >\n      <h1 className=\"f1-l white\">{title}</h1>\n    </Link>\n    <p className=\"lh-copy\" dangerouslySetInnerHTML={{ __html: excerpt }}>\n      \n    </p>\n    <div className=\"dib off-orange\">\n      <Link to={path} className=\"no-underline b off-orange\">more</Link>\n    </div>\n    <div className=\"mt2 gray\">{date}</div>\n  </article>","import * as React from 'react'\nimport Link from 'gatsby-link'\n\n\nconst ProfileHero: React.SFC<{ title: string; excerpt: string; path: string; }> = ({ title, excerpt, path }) => (\n  <header className=\"cover bg-left bg-center-l profile-hero-cover\">\n    <div className=\"bg-black-80 pt5 pb5 pb6-m\">\n      <div className=\"center pa4 pt5-ns ph7-l\" style={{ maxWidth: '80rem' }}>\n        <h3 className=\"f2 f1-m f-headline-l measure-narrow lh-title mv0\">{title}</h3>\n        <p className=\"f5 f4-l lh-copy measure\">{excerpt}</p>\n        <Link className=\"f6 link dim br2 ph3 pv2 mb2 dib white bg-mid-gray\" to={path} title=\"Read more\">Read more</Link>\n      </div>\n    </div>\n  </header>\n)\n\nexport default ProfileHero","import React from 'react'\nimport Layout from '../components/Layout'\nimport { graphql } from 'gatsby'\n\nimport PostItem from '../components/PostItem'\nimport ProfileHero from '../components/ProfileHero'\nexport default function Index({ data }) {\n  // const { edges: posts } = data.allMarkdownRemark\n  const [ headline, ...restPosts ] =\n    data.allMarkdownRemark.edges\n      .map(({ node }) => node)\n      .filter(node => node.frontmatter.title.length > 0)\n\n  return (\n    <Layout>\n\n      <ProfileHero\n        title={headline.frontmatter.title}\n        excerpt={headline.excerpt}\n        path={headline.frontmatter.path}\n      />\n\n      <div className=\"mw7 pv5 ph3 center\">\n        <section className=\"posts\">\n          {restPosts.map((post, idx) => {\n              return (\n                <PostItem\n                  key={idx}\n                  path={post.frontmatter.path}\n                  title={post.frontmatter.title}\n                  date={post.frontmatter.date}\n                  excerpt={post.excerpt}\n                />\n              )\n            })\n          }\n        </section>\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          excerpt(pruneLength: 250)\n          id\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            featuredImage {\n              childImageSharp{\n                fluid(maxWidth: 630) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;","import * as React from 'react'\nimport { Link, StaticQuery, graphql } from 'gatsby'\nimport * as classnames from 'classnames'\n\nconst NavLink: React.SFC<{ to: string; title: string; text: string; }> =\n  ({ to = '#', title = '', text = '' }) => (\n    <Link className=\"link white dim f6 f5-l dib mr3 mr4-l\" to={to} title={title}>{text}</Link>\n  )\n\nconst Nav: React.SFC<React.HTMLProps<HTMLDivElement>> = ({ className }) => (\n  <StaticQuery\n    query={graphql`\n      query NavQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <nav className={classnames('db dt-l w-100 pa3 ph5-l near-black transparent white absolute', className)} style={{ zIndex: 1000 }}>\n        <Link className=\"db dtc-l v-mid link dim w-100 w-25-l tc tl-l mb2 mb0-l\" to=\"/\" title=\"Home\">\n          <h1 className=\"f3 mv0 white\">{data.site.siteMetadata.title}</h1>\n        </Link>\n        <div className=\"db dtc-l v-mid w-100 w-75-l tc tr-l\">\n          {/* <NavLink to=\"/\" title=\"Home\" text=\"Home\" /> */}\n          {/* <NavLink to=\"/about\" title=\"About\" text=\"About\" /> */}\n        </div>\n      </nav>\n    )}\n  />\n)\n\nexport default Nav","import * as React from 'react'\n\nexport interface FooterProps {\n  title: string;\n}\n\nconst Footer: React.SFC<FooterProps> = ({ title }) =>\n  <footer className=\"fl w-100 pa4\">\n    <small className=\"f6 db tc\">Â© 2018 <b className=\"ttu\">{title}</b>., All Rights Reserved</small>\n    {<div className=\"tc mt3\">\n      {/*<a href=\"/language/\" title=\"Language\" className=\"f6 dib ph2 link mid-gray dim\">Language</a>\n      <a href=\"/terms/\"    title=\"Terms\" className=\"f6 dib ph2 link mid-gray dim\">Terms of Use</a>\n<a href=\"/privacy/\"  title=\"Privacy\" className=\"f6 dib ph2 link mid-gray dim\">Privacy</a>*/}\n      <a className=\"link near-black hover-silver dib mr3\" href=\"https://github.com/dalgos\" title=\"GitHub\" style={{ width: '1.5rem', height: '1.5rem' }}>\n        <svg fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" fillRule=\"evenodd\" clipRule=\"evenodd\" strokeLinejoin=\"round\" strokeMiterlimit=\"1.414\"><path d=\"M8 0C3.58 0 0 3.582 0 8c0 3.535 2.292 6.533 5.47 7.59.4.075.547-.172.547-.385 0-.19-.007-.693-.01-1.36-2.226.483-2.695-1.073-2.695-1.073-.364-.924-.89-1.17-.89-1.17-.725-.496.056-.486.056-.486.803.056 1.225.824 1.225.824.714 1.223 1.873.87 2.33.665.072-.517.278-.87.507-1.07-1.777-.2-3.644-.888-3.644-3.953 0-.873.31-1.587.823-2.147-.083-.202-.358-1.015.077-2.117 0 0 .672-.215 2.2.82.638-.178 1.323-.266 2.003-.27.68.004 1.364.092 2.003.27 1.527-1.035 2.198-.82 2.198-.82.437 1.102.163 1.915.08 2.117.513.56.823 1.274.823 2.147 0 3.073-1.87 3.75-3.653 3.947.287.246.543.735.543 1.48 0 1.07-.01 1.933-.01 2.195 0 .215.144.463.55.385C13.71 14.53 16 11.534 16 8c0-4.418-3.582-8-8-8\"/></svg>\n      </a>\n    </div>}\n  </footer>\n\nexport default Footer","import * as React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './Header'\nimport Nav from './Nav'\nimport Footer from './Footer'\nimport '../sass/index.scss'\n\nexport default ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query LayoutQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={data.site.siteMetadata.meta}\n        />\n        <div className=\"w-100\">\n\n          <Nav/>\n          \n          <div>\n            {children}\n          </div>\n        </div>\n        <Footer title={data.site.siteMetadata.title}/>\n      </div>\n    )}\n  />\n)"],"sourceRoot":""}