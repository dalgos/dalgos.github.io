{"version":3,"sources":["webpack:///./src/components/Pagination/index.tsx","webpack:///./src/components/PostItem/index.tsx","webpack:///./src/templates/blog-list.tsx","webpack:///./src/components/Nav/index.tsx","webpack:///./src/components/Footer/index.tsx","webpack:///./src/components/Layout.tsx"],"names":["Item","styled","div","_templateObject","Pagination","_ref","pages","react","className","map","_ref2","idx","href","isActive","title","key","classnames","active","gatsby_browser_entry","to","PostItem","path","date","excerpt","gatsby_link_default","a","BlogList","props","posts","data","allMarkdownRemark","edges","_props$pageContext","pageContext","currentPage","numPages","isFirst","Array","from","length","_","Layout","node","fields","slug","frontmatter","components_Pagination","blogListQuery","NavLink","_ref$className","_ref$to","_ref$title","_ref$text","text","useEffect","React","useCallback","useState","Nav","_useState","isUnpinned","isUnpinnedUpdater","_useState2","isMenuToggled","isMenuToggledUpdater","_useState3","start","end","updateScreenYs","scrollHandler","evt","deltaY","window","scrollY","menuClickHandler","touchStartHandler","screenYs","Object","assign","changedTouches","screenY","touchEndHandler","endScreenY","console","log","addEventListener","removeEventListener","query","render","unpinned","style","zIndex","mb3","site","siteMetadata","onClick","db","Nav_NavLink","_3655728470","Footer","width","height","fill","xmlns","viewBox","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","d","Content","__webpack_exports__","children","Helmet_default","meta","components_Nav","id","components_Footer","_3470870683"],"mappings":"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","file":"component---src-templates-blog-list-tsx-c606ecadc3f6aad9769b.js","sourcesContent":["import * as React from 'react'\nimport { Link } from 'gatsby'\nimport classnames from 'classnames'\nimport styled from 'styled-components'\n\nexport interface Props {\n  pages: Array<{\n    href: string;\n    isActive: boolean;\n    title: string;\n  }>;\n}\n\nconst Item = styled.div`\n  &.active {\n    color: #590098;\n  }\n`\n\nconst Pagination: React.FC<Props> = ({\n  pages,\n}) => {\n  return (\n    <nav className=\"ph3 ph5-ns pv4\">\n      <div className=\"flex justify-center\">\n      {pages.map(({ href, isActive, title }, idx) => (\n          <Item\n            key={`pagination-item-${idx}`}\n            className={classnames({ active: isActive })}\n          >\n            <Link\n              className=\"link dim gray f5 f4-ns dib mr3\"\n              to={href}\n              title={title}\n            >{title}</Link>\n          </Item>\n        ))}\n      </div>\n    </nav>\n  )\n}\n\nexport default Pagination\n","import * as React from 'react'\nimport Link from 'gatsby-link'\nimport Styled from 'styled-components'\nimport Img from 'gatsby-image'\n\nexport default ({ path, title, date, excerpt }) => (\n  <article>\n    <h2>\n      <Link\n        to={path}\n        className=\"f4 fw4 black\"\n      >\n        {title}\n      </Link>\n    </h2>\n    {/* <p className=\"lh-copy\" dangerouslySetInnerHTML={{ __html: excerpt }}>\n      \n    </p>\n    <div className=\"dib off-orange\">\n      <Link to={path} className=\"no-underline b off-orange\">more</Link>\n    </div>\n    <div className=\"mt2 gray\">{date}</div> */}\n  </article>\n)","import * as React from 'react'\nimport { graphql, Link } from 'gatsby'\n\nimport Layout from '../components/Layout'\nimport Pagination from '../components/Pagination'\nimport PostItem from '../components/PostItem'\n\ninterface Props {\n  data: any;\n  pageContext: {\n    numPages: number;\n    currentPage: number;\n  };\n}\n\nconst BlogList: React.FC<Props> = (props) => {\n  const posts = props.data.allMarkdownRemark.edges\n  const { currentPage, numPages } = props.pageContext\n  const isFirst = currentPage === 1\n  const isLast = currentPage === numPages\n  const pages = Array.from({ length: numPages }).map<{\n    href: string;\n    isActive: boolean;\n    title: string;\n  }>((_, idx) => {\n    return {\n      href: `${idx === 0 ? '/' : '/blog/' + (idx + 1)}`,\n      title: `${idx + 1}`,\n      isActive: idx + 1 === currentPage,\n    }\n  })\n  return (\n    <Layout>\n      <div className=\"mw7 pv5 ph3 center\">\n        <section className=\"posts\">\n          <h3 className=\"f4 lh-copy\">\n            {`${isFirst ? 'Latest ' : ''}Articles`}\n          </h3>\n          {posts.map(({ node }) => {\n              return (\n                <PostItem\n                  key={node.fields.slug}\n                  path={node.frontmatter.path}\n                  title={node.frontmatter.title}\n                  date={node.frontmatter.date}\n                  excerpt={node.excerpt}\n                />\n              )\n            })\n          }\n        </section>\n      </div>\n      {/* {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n        return <div key={node.fields.slug}>{title}</div>\n      })} */}\n      \n      <Pagination pages={pages}/>\n    </Layout>\n  )\n}\n\nexport default BlogList\n\nexport const blogListQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          excerpt(pruneLength: 250)\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n          }\n        }\n      }\n    }\n  }\n`","import * as React from 'react'\nimport { Link, StaticQuery, graphql } from 'gatsby'\nimport * as classnames from 'classnames'\n\nconst NavLink: React.SFC<{ to: string; title: string; text: string; className?: string }> =\n  ({ className = '', to = '#', title = '', text = '' }) => (\n    <Link className={classnames('link white dim f6 f5-l dib-l db mr4-l pv1-l pv3 bb bn-l b--light-gray', className)} to={to} title={title}>{text}</Link>\n  )\n\nconst { useEffect, useCallback, useState } = React\n\nconst Nav: React.SFC<React.HTMLProps<HTMLDivElement>> = ({ className }) => {\n\n  const { 0: isUnpinned, 1: isUnpinnedUpdater } = useState(false)\n  const { 0: isMenuToggled, 1: isMenuToggledUpdater } = useState(false)\n  const { 0: screenYs, 1: updateScreenYs } = useState({ start: 0, end: 0 })\n\n  const scrollHandler = useCallback((evt) => {\n    isUnpinnedUpdater(evt.deltaY > 0 ? window.scrollY > 0 : false)\n  }, [])\n\n  const menuClickHandler = useCallback(() => {\n    isMenuToggledUpdater((isMenuToggled) => !isMenuToggled)\n  }, [])\n\n  const touchStartHandler = useCallback((evt) => {\n    updateScreenYs((screenYs) => ({\n      ...screenYs,\n      start: evt.changedTouches[0].screenY,\n    }))\n  }, [])\n\n  const touchEndHandler = useCallback((evt) => {\n    const endScreenY = evt.changedTouches[0].screenY\n    updateScreenYs((screenYs) => {\n      console.log(screenYs.start, endScreenY)\n      isUnpinnedUpdater(screenYs.start > endScreenY ? window.scrollY > 0 : false)\n      return {\n        ...screenYs,\n        end: evt.changedTouches[0].screenY,\n      }\n    })\n  }, [])\n\n  // nav transition\n  useEffect(() => {\n    window.addEventListener('wheel', scrollHandler)\n    window.addEventListener('touchstart', touchStartHandler)\n    window.addEventListener('touchend', touchEndHandler)\n    return () => {\n      window.removeEventListener('wheel', scrollHandler)\n      window.removeEventListener('touchstart', touchStartHandler)\n      window.removeEventListener('touchend', touchEndHandler)\n    }\n  }, [])\n\n  return (\n    <StaticQuery\n      query={graphql`\n        query NavQuery {\n          site {\n            siteMetadata {\n              title\n            }\n          }\n        }\n      `}\n      render={data => {\n        return (\n          <nav className={classnames('db dt-l w-100 pa3 ph5-l fixed top-0 nav bg-white', className, { unpinned: isUnpinned })} style={{ zIndex: 1000 }}>\n            <div className={classnames('w-100 w-10-l mb0-l dib-l', { 'mb3': isMenuToggled })}>\n              <h1 className=\"f4 f3-ns mv0 dib fw1 w-10-l w-50\">\n                <Link className=\"db black dtc-l v-mid link dim w-100 w-10-l tl-l\" to=\"/\" title=\"Home\">\n                  {data.site.siteMetadata.title}\n                </Link>\n              </h1>\n              <div className=\"w-50 dib tr dn-l\">\n                <a\n                  href=\"javascript: void(0);\"\n                  className={classnames('ball v-mid', { active: isMenuToggled })}\n                  onClick={menuClickHandler}\n                />\n              </div>\n            </div>\n            <nav className={classnames('w-90-l w-100 dib-l db-l dn bt bn-l b--light-gray bg-white', { 'db': isMenuToggled })}>\n              <ul className=\"list db dtc-l fw1 ttl v-mid ma0 pa0\">\n                {/* <NavLink to=\"/\" title=\"Home\" text=\"Home\" /> */}\n                <li className=\"dib-l tl-l db tc\">\n                  <NavLink to=\"/about\" title=\"About\" text=\"About\" />\n                </li>\n              </ul>\n            </nav>\n          </nav>\n        )\n      }}\n    />\n  )\n}\n\nexport default Nav","import * as React from 'react'\n\nexport interface FooterProps {\n  title: string;\n}\n\nconst Footer: React.SFC<FooterProps> = ({ title }) =>\n  <footer className=\"fl w-100 pa4\">\n    <small className=\"f6 db tc\">© 2018 <b className=\"ttu\">{title}</b>., All Rights Reserved</small>\n    {<div className=\"tc mt3\">\n      {/*<a href=\"/language/\" title=\"Language\" className=\"f6 dib ph2 link mid-gray dim\">Language</a>\n      <a href=\"/terms/\"    title=\"Terms\" className=\"f6 dib ph2 link mid-gray dim\">Terms of Use</a>\n<a href=\"/privacy/\"  title=\"Privacy\" className=\"f6 dib ph2 link mid-gray dim\">Privacy</a>*/}\n      <a className=\"link near-black hover-silver dib mr3\" href=\"https://github.com/dalgos\" title=\"GitHub\" style={{ width: '1.5rem', height: '1.5rem' }}>\n        <svg fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" fillRule=\"evenodd\" clipRule=\"evenodd\" strokeLinejoin=\"round\" strokeMiterlimit=\"1.414\"><path d=\"M8 0C3.58 0 0 3.582 0 8c0 3.535 2.292 6.533 5.47 7.59.4.075.547-.172.547-.385 0-.19-.007-.693-.01-1.36-2.226.483-2.695-1.073-2.695-1.073-.364-.924-.89-1.17-.89-1.17-.725-.496.056-.486.056-.486.803.056 1.225.824 1.225.824.714 1.223 1.873.87 2.33.665.072-.517.278-.87.507-1.07-1.777-.2-3.644-.888-3.644-3.953 0-.873.31-1.587.823-2.147-.083-.202-.358-1.015.077-2.117 0 0 .672-.215 2.2.82.638-.178 1.323-.266 2.003-.27.68.004 1.364.092 2.003.27 1.527-1.035 2.198-.82 2.198-.82.437 1.102.163 1.915.08 2.117.513.56.823 1.274.823 2.147 0 3.073-1.87 3.75-3.653 3.947.287.246.543.735.543 1.48 0 1.07-.01 1.933-.01 2.195 0 .215.144.463.55.385C13.71 14.53 16 11.534 16 8c0-4.418-3.582-8-8-8\"/></svg>\n      </a>\n    </div>}\n  </footer>\n\nexport default Footer","import * as React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\nimport styled from 'styled-components'\n\nimport Header from './Header'\nimport Nav from './Nav'\nimport Footer from './Footer'\nimport '../sass/index.scss'\n\nconst Content = styled.div`\n  margin: 0 auto;\n`\n\nexport default ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query LayoutQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div className=\"sans-serif page light\">\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={data.site.siteMetadata.meta}\n        />\n        <Nav/>\n        <Content id=\"content\" className=\"mw7 pv6-l pv5 ph5-l ph3\">\n          <div id=\"primary\" className=\"w-100\">\n            {children}\n          </div>\n        </Content>\n        <Footer title={data.site.siteMetadata.title}/>\n      </div>\n    )}\n  />\n)"],"sourceRoot":""}