{"version":3,"sources":["webpack:///./src/components/EntryHeader/index.tsx","webpack:///./src/components/Pager/index.tsx","webpack:///./src/templates/blog-post.tsx"],"names":["EntryHeader","title","className","style","letterSpacing","ItemContainer","hoverable","children","classnames","Item","context","to","Pager","next","previous","frontmatter","path","Template","data","pageContext","post","markdownRemark","console","log","Layout","dangerouslySetInnerHTML","__html","html","pageQuery"],"mappings":"+JASeA,EAPK,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAClB,8BACE,sBAAIC,UAAU,4BAA4BC,MAAO,CAAEC,cAAe,aAAeH,GACjF,sBAAIC,UAAU,gB,iCCkBZG,EAID,SAAC,GAIA,IAHJH,EAGI,EAHJA,UAGI,IAFJI,iBAEI,SADJC,EACI,EADJA,SAEA,OACE,uBAAKL,UAAWM,IACd,gCACAN,EACA,CACE,sBAAuBI,KAGxBC,IAKDE,EAAmE,SAAC,GAIpE,IAHJR,EAGI,EAHJA,MACAS,EAEI,EAFJA,QACAC,EACI,EADJA,GAEA,OACE,gBAAC,OAAD,CAAMA,GAAIA,EAAIT,UAAU,cACtB,uBAAKA,UAAU,gBACb,uBAAKA,UAAU,OACb,sBAAIA,UAAU,gBACXD,KAIP,qBAAGC,UAAU,mCACVQ,KAwCME,EAlCgB,SAAC,GAG1B,IAFJC,EAEI,EAFJA,KACAC,EACI,EADJA,SAEA,OACE,2BAASZ,UAAU,eACjB,gBAAC,EAAD,CACEA,UAAU,QACVI,YAAaO,GAEZA,GACD,gBAAC,EAAD,CACEF,GAAIE,EAAKE,YAAYC,KACrBf,MAAM,OACNS,QAASG,EAAKE,YAAYd,SAI9B,gBAAC,EAAD,CACEC,UAAU,QACVI,YAAaQ,GAEZA,GACD,gBAAC,EAAD,CACEH,GAAIG,EAASC,YAAYC,KACzBf,MAAM,OACNS,QAASI,EAASC,YAAYd,WC5DzB,SAASgB,EAAT,GAAiD,IAA5BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,YAChBC,EAASF,EAAzBG,eAER,OADAC,QAAQC,IAAIL,GAEV,gBAACM,EAAA,EAAD,KACE,gBAAC,IAAD,CAAQvB,MAAK,GAAKmB,EAAKL,YAAYd,QACnC,2BAASC,UAAU,iBAQjB,gBAAC,EAAD,CAAaD,MAAOmB,EAAKL,YAAYd,QAErC,uBAAKC,UAAU,OAAOuB,wBAAyB,CAAEC,OAAQN,EAAKO,SAGhE,gBAAC,EAAD,CACEd,KAAMM,EAAYN,KAClBC,SAAUK,EAAYL,YArD9B,kFA2DO,IAAMc,EAAY","file":"component---src-templates-blog-post-tsx-c597ff227509e298fe62.js","sourcesContent":["import * as React from 'react'\n\nconst EntryHeader = ({ title }) => (\n  <header>\n    <h1 className=\"f2-l f2 lh-title mv0 w-80\" style={{ letterSpacing: '-0.05rem' }}>{title}</h1>\n    <hr className=\"mv5-l mv4\"/>\n  </header>\n)\n\nexport default EntryHeader\n","import * as React from 'react'\nimport { Link } from 'gatsby'\nimport classnames from 'classnames'\n\ninterface Node {\n  excerpt: string;\n  fields: {\n    slug: string;\n  };\n  frontmatter: {\n    data: string;\n    path: string;\n    title: string;\n  };\n  html: string;\n  id: string;\n}\n\ninterface Props {\n  next?: Node;\n  previous?: Node;\n}\n\nconst ItemContainer: React.FC<{\n  className?: string;\n  children: JSX.Element;\n  hoverable?: boolean;\n}> = ({\n  className,\n  hoverable = false,\n  children, \n}) => {\n  return (\n    <div className={classnames(\n      \"dtc w-100 w-50-ns bg-white tc\",\n      className,\n      {\n        'hover-bg-light-gray': hoverable,\n      }\n    )}>\n      {children}\n    </div>\n  )\n}\n\nconst Item: React.FC<{ title: string; context: string; to?: string; }> = ({\n  title,\n  context,\n  to,\n}) => {\n  return (\n    <Link to={to} className=\"ph4 db pv1\">\n      <div className=\"dt w-100 mt1\">\n        <div className=\"dtc\">\n          <h1 className=\"f5 f4-ns mtl\">\n            {title}\n          </h1>\n        </div>\n      </div>\n      <p className=\"f6 lh-copy measure mt2 mid-gray\">\n        {context}\n      </p>\n    </Link>\n  )\n}\n\nconst Pager: React.FC<Props> = ({\n  next,\n  previous,\n}) => {\n  return (\n    <article className=\"cf dt w-100\">\n      <ItemContainer\n        className=\"tl-ns\"\n        hoverable={!!next}\n      >\n        {next &&\n        <Item\n          to={next.frontmatter.path}\n          title=\"Prev\"\n          context={next.frontmatter.title}\n        />}\n      </ItemContainer>\n      \n      <ItemContainer\n        className=\"tr-ns\"\n        hoverable={!!previous}\n      >\n        {previous &&\n        <Item\n          to={previous.frontmatter.path}\n          title=\"Next\"\n          context={previous.frontmatter.title}\n        />}\n      </ItemContainer>\n\n    </article>\n  )\n}\n\nexport default Pager\n","import * as React from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql, StaticQuery } from 'gatsby'\n\nimport '../sass/index.scss'\nimport Layout from '../components/Layout'\nimport ArticleHeader from '../components/ArticleHeader'\nimport EntryHeader from '../components/EntryHeader'\nimport Pager from '../components/Pager'\n\ninterface Node {\n  excerpt: string;\n  fields: {\n    slug: string;\n  };\n  frontmatter: {\n    data: string;\n    path: string;\n    title: string;\n  };\n  html: string;\n  id: string;\n}\n\ninterface Props {\n  data: any;\n  pageContext: {\n    previous?: Node;\n    next?: Node;\n  }\n}\n\nexport default function Template ({ data, pageContext }: Props) {\n  const { markdownRemark: post } = data\n  console.log(data)\n  return (\n    <Layout>\n      <Helmet title={`${post.frontmatter.title}`} />\n      <article className=\"lh-copy _post\">\n\n        {/* <ArticleHeader\n          title={post.frontmatter.title}\n          subTitle={data.site.siteMetadata.description}\n          date={post.frontmatter.date}\n          fluid={post.frontmatter.featuredImage.childImageSharp.fluid}\n        /> */}\n        <EntryHeader title={post.frontmatter.title} />\n\n        <div className=\"post\" dangerouslySetInnerHTML={{ __html: post.html }} />\n      </article>\n\n      <Pager\n        next={pageContext.next}\n        previous={pageContext.previous}\n      />\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query BlogPostByPath($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }){\n      html,\n      frontmatter{\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n      }\n    }\n    site {\n      siteMetadata {\n        description\n      }\n    }\n  }\n`\n"],"sourceRoot":""}